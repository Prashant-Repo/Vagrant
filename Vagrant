Vagrant

Installing Vagrant(Centos)

rpm -ivh https://releases.hashicorp.com/vagrant/1.7.4/vagrant_1.7.4_x86_64.rpm


http://www.vagrantbox.es/

 $ vagrant box add centos-7.0-x86_64 https://github.com/tommy-muehle/puppet-vagrant-boxes/releases/download/1.1.0/centos-7.0-x86_64.box
 $ vagrant init centos-7.0-x86_64 
 $ vagrant up

vagrant ssh (To login to that Virtual Machine)
vagrant destroy (To Destroy a Virtual Machine)


[root@megatron Downloads]# vagrant box list
CentOS6.6      (virtualbox, 0)
centos7_x86_64 (virtualbox, 0)

[root@megatron vagrant]# vagrant box remove db
Box 'db' (v0) with provider 'virtualbox' appears
to still be in use by at least one Vagrant environment. Removing
the box could corrupt the environment. We recommend destroying
these environments first:

db (ID: 0391e32bcdc14940903d545309fa4c12)

Are you sure you want to remove this box? [y/N] y
Removing box 'db' (v0) with provider 'virtualbox'...



[root@megatron Downloads]# vagrant status
Current machine states:

default                   running (virtualbox)

The VM is running. To stop this VM, you can run `vagrant halt` to
shut it down forcefully, or you can run `vagrant suspend` to simply
suspend the virtual machine. In either case, to restart it again,
simply run `vagrant up`.


Syncing Folder(Folders can be shared b/w the hosts and the guests virtual machine)

config.vm.synced_folder "../data", "/vagrant_data"

config.vm.synced_folder "../data", "/vagrant_data",disable:true (If we want to disable the sharing)
     owner:"root",group:"root"   (To set the ownership of shared folder)

Vagrant Networking

config.vm.network "forwarded_port", guest: 80, host: 8080

config.vm.network "private_network", type: "dhcp" (To assign it via DHCP)

config.vm.network "private_network", ip: "192.168.0.10" (To assign a static ip)

auto_config:false (To disable auto-configuration)

config.vm.network "public_network", ip: "192.168.0.10" (Static IP)

config.vm.network "public_network" (for dhcp)

config.vm.network "public_network" ,bridge: 'en1: Wi-Fi'(To choose a default interface in case of multiple interface)





 



Setting Shell as Provisioner 


config.vm.provision "shell", path: "provision.sh"



Vagrant File(Vagrant with Puppet)
--------------


  config.vm.box = "base"
  config.vm.box_url = "https://github.com/tommy-muehle/puppet-vagrant-boxes/releases/download/1.1.0/centos-7.0-x86_64.box"
  

     # Setup Web Server
     config.vm.define "web" do |web|
             web.vm.hostname = "web"
             web.vm.box = "apache"
             web.vm.network "private_network", type: "dhcp"
             web.vm.network "forwarded_port", guest: 80, host: 8080
             web.vm.provision "puppet" do |puppet|
                     puppet.manifests_path = "manifests"
                     puppet.manifest_file = "default.pp"
     end
end
     
     # Setup MySQL Server
     config.vm.define "db" do |db|
             db.vm.hostname = "db"
             db.vm.box = "db"
             db.vm.network "private_network", type: "dhcp"
     end
end



[root@megatron vagrant]# cat manifests/default.pp 
exec { "yum update":
         command => "/bin/yum update",
}
package { "http":
        require => Exec["yum update"],
}

file { "/var/www/html":
        ensure => link,
        target => "/vagrant",
        force => true,
}
















	








